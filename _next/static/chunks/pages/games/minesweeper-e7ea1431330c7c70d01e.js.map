{"version":3,"sources":["webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?3464","webpack://_N_E/./node_modules/@material-ui/icons/esm/FormatAlignJustify.js","webpack://_N_E/./node_modules/@material-ui/icons/esm/Brightness7.js","webpack://_N_E/./pages/games/minesweeper.jsx","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","window","__NEXT_P","push","createSvgIcon","d","hasElementInArray","elem","some","arrElem","every","e","idx","types","STATUS","strings","GAME_ENDS","inputs","htmlId","label","adornment","InputAdornment","FormatAlignJustify","css","Brightness7","titleId","getConnectedSafeZones","answer","row","col","list","adj","getAdjacentCoordList","forEach","getCurrentZoneVal","reduce","sum","board","maxRow","maxCol","Math","max","min","j","initialGameState","status","initialAlertOptions","show","message","severity","initialUserInput","rows","cols","mines","MineSweeper","useState","setBoard","setAnswer","showAnswer","setShowAnswer","userInputs","setUserInputs","gameState","setGameState","alertOptions","setAlertOptions","useHotkeys","useEffect","onClickNewGame","fill","splice","createBoard","mineIdx","shuffle","map","_","onlyMines","val","includes","pop","rowIdx","zone","colIdx","createAnswer","makeOnClick","ev","buttons","button","makeOnContextMenu","preventDefault","v","makeOnAuxClick","onChangeUserInput","target","value","Container","maxWidth","ToolbarSpacer","id","Typography","variant","component","Link","href","gutterBottom","Box","mt","mb","Button","size","onClick","placeholder","FormControl","InputLabel","htmlFor","OutlinedInput","onChange","startAdornment","type","Paper","MineBoard","onContextMenu","onAuxClick","disabled","onClose","open","closeText","CLOSE","_slicedToArray","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","err","unsupportedIterableToArray","TypeError","_toConsumableArray","arrayLikeToArray","iter"],"mappings":"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","file":"static/chunks/pages/games/minesweeper-e7ea1431330c7c70d01e.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/games/minesweeper\",\n      function () {\n        return require(\"private-next-pages/games/minesweeper.jsx\");\n      }\n    ]);\n  ","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"\n}), 'FormatAlignJustify');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 8.69V4h-4.69L12 .69 8.69 4H4v4.69L.69 12 4 15.31V20h4.69L12 23.31 15.31 20H20v-4.69L23.31 12 20 8.69zM12 18c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z\"\n}), 'Brightness7');","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  FormControl,\n  FormControlLabel,\n  FormLabel,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography,\n  Snackbar,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  Link,\n  IconButton,\n  Paper,\n} from '@material-ui/core';\nimport { css } from '@emotion/react';\nimport {\n  AcUnit as AcUnitIcon,\n  Brightness7 as Brightness7Icon,\n  FormatAlignJustify as FormatAlignJustifyIcon,\n} from '@material-ui/icons';\nimport { ToolbarSpacer } from '@components/ToolbarSpacer';\nimport { MineBoard } from '@components/games/minesweeper/MineBoard';\nimport { shuffle } from '@utils/common';\nimport { SnackBarX } from '@components/SnackbarX';\nimport { useHotkeys } from 'react-hotkeys-hook';\n\nconst hasElementInArray = (elem, arr) =>\n  // array duplication check\n  // when elem is an array\n  arr.some((arrElem) => arrElem.every((e, idx) => e === elem[idx]));\n\nconst types = {\n  MINE: -1,\n  SAFE: 0,\n  VEILED: 10,\n  SUSPICIOUS: 11,\n  UNDETERMINED: 12,\n};\n\nconst STATUS = {\n  ONGOING: 0,\n  SUCCESS: 1,\n  FAILURE: 2,\n};\n\nconst strings = {\n  GAME_ENDS: '게임이 종료되었습니다.',\n};\n\nconst inputs = [\n  {\n    htmlId: 'input__rows',\n    label: '행',\n    name: 'rows',\n    adornment: (\n      <InputAdornment>\n        <FormatAlignJustifyIcon />\n      </InputAdornment>\n    ),\n    // placeholder: '1 이상 100 이하',\n  },\n  {\n    name: 'cols',\n    htmlId: 'input__cols',\n    label: '열',\n    adornment: (\n      <InputAdornment\n        css={css`\n          transform: rotate(90deg);\n        `}\n      >\n        <FormatAlignJustifyIcon />\n      </InputAdornment>\n    ),\n    // placeholder: '1 이상 100 이하',\n  },\n  {\n    name: 'mines',\n    htmlId: 'input__mines',\n    label: '지뢰 수',\n    adornment: (\n      <InputAdornment>\n        <Brightness7Icon />\n      </InputAdornment>\n    ),\n    // placeholder: '1 이상 100 이하',\n  },\n];\n\nconst titleId = 'minesweeper';\nconst title = 'Mine Sweeper';\n\nconst createAnswer = (rows, cols, mines) => {\n  const mineIdx = shuffle(\n    Array(rows * cols)\n      .fill(0)\n      .map((_, idx) => idx)\n  ).slice(0, mines);\n\n  const onlyMines = Array(rows * cols)\n    .fill(null)\n    .reduce((arr, _, idx) => {\n      const val = mineIdx.includes(idx) ? types.MINE : types.VEILED;\n      arr.push(idx % cols === 0 ? [val] : [...arr.pop(), val]);\n      return arr;\n    }, []);\n\n  const answer = onlyMines.map((row, rowIdx) => {\n    const tmprow = row.map((zone, colIdx) => {\n      if (zone === types.MINE) {\n        return types.MINE;\n      } else {\n        const ss = getCurrentZoneVal([rowIdx, colIdx], onlyMines);\n        return ss;\n      }\n    });\n    console.info(tmprow);\n    return tmprow;\n  });\n  return answer;\n};\n\nconst getConnectedSafeZones = ([row, col], answer, list = []) => {\n  if (answer[row][col] !== 0) {\n    return list;\n  } else {\n    // 주변 최대 8칸\n    const adj = getAdjacentCoordList([row, col]);\n    // 중복확인 로직\n    if (!hasElementInArray([row, col], list)) {\n      list.push([row, col]);\n    }\n    adj.forEach(([row, col]) => {\n      list = getConnectedSafeZones([row, col], answer, list);\n    });\n    return list;\n  }\n};\n\nconst createBoard = (rows, cols) => {\n  const board = [];\n  const list = Array(rows * cols).fill(types.VEILED);\n  while (list.length) {\n    board.push(list.splice(0, cols));\n  }\n  return board;\n};\n\nconst getCurrentZoneVal = ([row, col], answer) => {\n  return getAdjacentCoordList([row, col], answer).reduce(\n    (sum, [row, col], idx) => sum + (answer[row][col] === -1 ? 1 : 0),\n    0\n  );\n};\n\nconst getAdjacentCoordList = ([row, col], board) => {\n  const list = [];\n  const maxRow = board.length;\n  const maxCol = board[0].length;\n  for (let i = Math.max(row - 1, 0); i < Math.min(row + 2, maxRow); i++) {\n    for (let j = Math.max(col - 1, 0); j < Math.min(col + 2, maxCol); j++) {\n      list.push([i, j]);\n    }\n  }\n  // console.info(list);\n  return list;\n};\n\n// ******************************\n// ******************************\nconst initialGameState = {\n  status: false,\n};\nconst initialAlertOptions = {\n  show: false,\n  message: '',\n  severity: 'success',\n};\nconst initialUserInput = {\n  rows: 14,\n  cols: 17,\n  mines: 8,\n};\n\n// ******************************\n// ******************************\n\nexport default function MineSweeper() {\n  const [board, setBoard] = useState();\n  const [answer, setAnswer] = useState();\n  const [showAnswer, setShowAnswer] = useState(true);\n  const [userInputs, setUserInputs] = useState(initialUserInput);\n  const [gameState, setGameState] = useState(initialGameState);\n  const [alertOptions, setAlertOptions] = useState(initialAlertOptions);\n\n  useHotkeys('ctrl+alt+k', () => setShowAnswer((showAnswer) => !showAnswer));\n\n  useEffect(() => {\n    const { rows, cols, mines } = userInputs;\n    onClickNewGame(rows, cols, mines)();\n  }, []);\n\n  const onClickNewGame = (rows, cols, mines) => () => {\n    setBoard(createBoard(rows, cols));\n    setAnswer(createAnswer(rows, cols, mines));\n    // setShowAnswer(false);\n    // setUserInputs\n    setGameState(initialGameState);\n    setAlertOptions(initialAlertOptions);\n  };\n\n  const makeOnClick = (row, col) => (ev) => {\n    console.info('onClick', ev.buttons, ev.button, ev.detail, ev.eventPhase);\n    if (gameState.status) {\n      return;\n    }\n    if (ev.buttons === 0 && ev.button === 0) {\n      const v = board[row][col];\n      if (v === types.VEILED) {\n        if (answer[row][col] === types.MINE) {\n          board[row][col] = types.MINE;\n          setBoard([...board]);\n          setShowAnswer(true);\n          setGameState({\n            ...gameState,\n            status: STATUS.FAILURE,\n          });\n          setAlertOptions({\n            show: true,\n            message: strings.GAME_ENDS,\n            severity: 'error',\n          });\n          return;\n        } else {\n          const safeZones = getConnectedSafeZones([row, col], answer);\n          console.info(safeZones);\n          // board[row][col] = types.SAFE;\n          board[row][col] = answer[row][col];\n          setBoard([...board]);\n          return;\n        }\n        // ******************************\n        // ******************************\n        // ******************************\n        // ******************************\n        // ******************************\n        // ******************************\n        // ******************************\n        // ******************************\n        // ******************************\n        // const ans = answer[row][col];\n        // board[row][col] = ans;\n        // setBoard([...board]);\n        // if (ans === types.MINE) {\n        //   // setGameState({ ...gameState, status: 1 });\n        // }\n      } else {\n        // pass\n      }\n    } else {\n      //composite\n    }\n  };\n\n  const makeOnContextMenu =\n    (row, col) =>\n    (ev, ...args) => {\n      // lrlr: up click / up con\n      // lrrl: up con / up (click)\n      // rllr: up click / up con\n      // rlrl: up con / up (click)\n      // console.info(ev);\n      console.info(\n        'onContextMenu',\n        ev.buttons,\n        ev.button,\n        ev.detail,\n        ev.eventPhase\n      );\n\n      ev.preventDefault();\n      if (ev.buttons === 0 && ev.button === 2) {\n        if (gameState.status) return false;\n        const v = board[row][col];\n        if (v === types.VEILED) {\n          board[row][col] = types.SUSPICIOUS;\n          setBoard([...board]);\n        } else if (v === types.SUSPICIOUS) {\n          board[row][col] = types.UNDETERMINED;\n          setBoard([...board]);\n        } else if (v === types.UNDETERMINED) {\n          board[row][col] = types.VEILED;\n          setBoard([...board]);\n        } else {\n          // pass\n        }\n      } else {\n        // composite\n      }\n    };\n\n  const makeOnAuxClick = (row, col) => (ev) => {\n    console.info('onAuxClick');\n    // const v = ev.currentTarget.value;\n\n    // if (v === 0) {\n    //   // 인접칸에 물음표가 없고, 지뢰플래그 수가 칸 값과 같으면\n    //   // 지뢰 플래그가 정확히 지뢰에 있는지 확인\n    //   const list = getAdjacentCoordList([row, col], board);\n    //   const actualMines = list.filter(([row, col]) => {\n    //     answer[row][col] === types.MINE;\n    //   });\n    // } else {\n    //   // pass\n    // }\n  };\n\n  const onChangeUserInput = ({ target: { name, value } }) => {\n    setUserInputs({ ...userInputs, [name]: value });\n  };\n\n  const onClose = () => {\n    setAlertOptions({ ...alertOptions, show: false });\n  };\n\n  return (\n    <Container maxWidth='lg'>\n      <ToolbarSpacer id={titleId} />\n      <Typography\n        variant='h6'\n        component={Link}\n        href={`#${titleId}`}\n        gutterBottom\n      >\n        {title}\n      </Typography>\n      <Box mt={1} mb={1}>\n        <Button size='large' onClick={onClickNewGame(8, 8, 5)}>\n          새 게임(초급)\n        </Button>\n        <Button size='large' onClick={onClickNewGame(12, 20, 20)}>\n          새 게임(중급)\n        </Button>\n        <Button size='large' onClick={onClickNewGame(18, 30, 40)}>\n          새 게임(고급)\n        </Button>\n      </Box>\n      <Box mt={1} mb={1}>\n        <Button\n          size='large'\n          onClick={onClickNewGame(\n            userInputs.rows,\n            userInputs.cols,\n            userInputs.mines\n          )}\n        >\n          새 게임(사용자 정의)\n        </Button>\n        {inputs.map(({ name, htmlId, label, adornment, placeholder }) => {\n          return (\n            <FormControl variant='outlined' key={htmlId}>\n              <InputLabel htmlFor={htmlId}>{label}</InputLabel>\n              <OutlinedInput\n                id={htmlId}\n                name={name}\n                value={userInputs[name]}\n                onChange={onChangeUserInput}\n                label={label}\n                startAdornment={adornment}\n                type='number'\n                placeholder={placeholder ?? ''}\n                // maxValue={5}\n              />\n            </FormControl>\n          );\n        })}\n      </Box>\n      <Box>\n        <Typography>시간 타임 아웃</Typography>\n      </Box>\n      {board && board.length > 0 && (\n        <Paper\n          css={css`\n            display: flex;\n            flex-flow: row wrap;\n            justify-content: space-evenly;\n          `}\n        >\n          <MineBoard\n            list={board}\n            onClick={makeOnClick}\n            onContextMenu={makeOnContextMenu}\n            onAuxClick={makeOnAuxClick}\n          />\n          {showAnswer && (\n            <MineBoard\n              list={answer}\n              onClick={makeOnClick}\n              onContextMenu={makeOnContextMenu}\n              onAuxClick={makeOnAuxClick}\n              disabled={true}\n            />\n          )}\n        </Paper>\n      )}\n      <SnackBarX\n        onClose={onClose}\n        open={alertOptions.show}\n        message={alertOptions.message}\n        closeText={strings.CLOSE}\n        severity={alertOptions.severity}\n      />\n    </Container>\n  );\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}