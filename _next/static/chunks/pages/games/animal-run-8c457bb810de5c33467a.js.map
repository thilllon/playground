{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://_N_E/./node_modules/shortid/lib/is-valid.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/inherits.js","webpack://_N_E/./node_modules/nanoid/format.browser.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./node_modules/shortid/lib/index.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js","webpack://_N_E/./node_modules/shortid/lib/random/random-byte-browser.js","webpack://_N_E/../../../next-server/lib/head-manager-context.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?e81a","webpack://_N_E/./node_modules/shortid/lib/build.js","webpack://_N_E/./node_modules/shortid/lib/alphabet.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://_N_E/./pages/games/animal-run/index.jsx","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./node_modules/shortid/lib/random/random-from-seed.js","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/createClass.js","webpack://_N_E/./node_modules/shortid/index.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/../../../next-server/lib/amp-context.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/./node_modules/shortid/lib/util/cluster-worker-id-browser.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://_N_E/./node_modules/shortid/lib/generate.js"],"names":["isInAmpMode","React","AmpStateContext","ampFirst","hybrid","hasQuery","module","exports","instance","Constructor","TypeError","alphabet","id","length","RegExp","get","replace","test","setPrototypeOf","subClass","superClass","prototype","Object","create","constructor","value","writable","configurable","random","size","mask","Math","log","LN2","step","bytes","i","arrayLikeToArray","arr","Array","isArray","len","arr2","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","props","keys","tags","metaTypes","metaCategories","h","isUnique","hasKey","key","metatype","category","categories","unique","c","some","url","newProps","Head","ampState","useContext","headManager","HeadManagerContext","reduceComponentsToState","build","isValid","clusterWorkerId","generate","seed","seedValue","worker","workerId","characters","newCharacters","undefined","shuffled","_typeof","obj","Symbol","iterator","randomByte","crypto","window","msCrypto","getRandomValues","Uint8Array","push","floor","o","minLen","n","toString","call","slice","from","__NEXT_P","counter","previousSeconds","str","seconds","Date","now","previousSeed","randomFromSeed","ORIGINAL","reset","setCharacters","_alphabet_","Error","split","filter","item","ind","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","splice","shuffle","lookup","index","_getPrototypeOf","getPrototypeOf","__proto__","AnimalRun","useState","maxWidth","_hasHeadManager","emitChange","this","Component","_seed_","_defineProperties","target","descriptor","enumerable","defineProperty","protoProps","staticProps","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","self","ReferenceError","_setPrototypeOf","p","iter","assertThisInitialized","format","number","done","loopCounter","pow"],"mappings":"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","file":"static/chunks/pages/games/animal-run-8c457bb810de5c33467a.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n    let hasKey = false\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (\n        process.env.NODE_ENV !== 'development' &&\n        process.env.__NEXT_OPTIMIZE_FONTS &&\n        !props.inAmpMode\n      ) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css'].some((url) =>\n            c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","import React from 'react'\n\nexport const HeadManagerContext: React.Context<{\n  updateHead?: (state: any) => void\n  mountedInstances?: any\n  updateScripts?: (state: any) => void\n  scripts?: any\n}> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  HeadManagerContext.displayName = 'HeadManagerContext'\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/games/animal-run\",\n      function () {\n        return require(\"private-next-pages/games/animal-run/index.jsx\");\n      }\n    ]);\n  ","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","import React, { useState } from 'react';\nimport Head from 'next/head';\nimport { Container, Typography } from '@material-ui/core';\nimport { Label } from '@material-ui/icons';\nimport { css } from '@emotion/react';\nimport { lorem } from 'faker';\nimport shortid from 'shortid';\n\n// #container {\n//   width: 800px;\n//   height: 400px;\n//   position: relative;\n//   background: var(--color-container);\n// }\n\n// .animal {\n//   background-repeat: no-repeat !important;\n//   background-color: white !important;\n//   background-position: center !important;\n//   background-size: contain !important;\n//   width: 50px;\n//   height: 50px;\n//   position: absolute;\n//   text-align: center;\n//   vertical-align: middle;\n// }\n\n// .clicker + .circle {\n//     -webkit-animation: rotor 1.5s linear 0s infinite normal;\n//     -mox-animation: rotor 1.5s linear 0s infinite normal;\n//     -o-animation: rotor 1.5s linear 0s infinite normal;\n//     animation: rotor 1.5s linear 0s infinite normal;\n// }\n\n// .paused {\n//     -webkit-animation-play-state: paused !important;\n//     -moz-animation-play-state: paused !important;\n//     -o-animation-play-state: paused !important;\n//     animation-play-state: paused !important;\n// }\n\nconst title = 'Animal Run';\nconst numberOfAnimals = 8;\nconst containerWidth = 800;\nconst animalWidth = 50;\nconst animalHeight = 50;\nconst bezierRandomFactor1 = 0.4;\nconst bezierRandomFactor2 = 0.6;\nconst minDuration = 1000;\nconst maxDuration = 3000;\n\nexport default function AnimalRun() {\n  const [num, setNum] = useState(0);\n  const [status, setStatus] = useState('ready'); // ready, start, pause\n\n  const onClickReset = (ev) => {\n    //\n  };\n\n  return (\n    <Container maxWidth='lg'>\n      <Head>\n        <title>{title}</title>\n      </Head>\n    </Container>\n  );\n}\n//  <Typography variant='h1'>{title}</Typography>\n//       <Box>\n//         <Box>\n//           <Button onClick={onClickButton}>+</Button>\n//           <Input value={33} />\n//           <Button onClick={onClickButton}>-</Button>\n//         </Box>\n//         <Box>\n//           {status === 'ready' && <Button>Start</Button>}\n//           {status === 'start' && <Button>Pause</Button>}\n//           {status === 'pause' && <Button onClick={onClickReset}>Reset</Button>}\n//         </Box>\n//       </Box>\n//       <Box>\n//         {Array(num)\n//           .fill(null)\n//           .map((_, idx) => {\n//             return <Button key={'_' + idx}>{idx}</Button>;\n//           })}\n//       </Box>\n//       {status === 'start' && (\n//         <Box>\n//           {Array(num)\n//             .fill(null)\n//             .map((elem, idx) => {\n//               return (\n//                 <Box key={'_' + idx}>\n//                   <img alt={idx} src={elem.src} />\n//                 </Box>\n//               );\n//             })}\n//         </Box>\n//       )}\n","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","module.exports = require('./dist/next-server/lib/head')\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","'use strict';\nmodule.exports = require('./lib/index');\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","'use strict';\n\nmodule.exports = 0;\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n"],"sourceRoot":""}