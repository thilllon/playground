{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?3046","webpack://_N_E/./components/kohmasutra/PrevNextButton.jsx","webpack://_N_E/./pages/kohmasutra/posts/[postId].jsx"],"names":["window","__NEXT_P","push","strings","PrevNextButton","disabled","href","type","postId","label","id","Number","subdirectoryUrl","Error","Button","css","component","Link","undefined","ButtonDiv","Box","mt","KohmasutraPost","props","router","useRouter","query","timeoff","t","random","r","kohmaList","filter","String","title","content","file","useEffect","setTimeout","nextId","Array","fill","map","_","idx","Math","floor","src","Container","maxWidth","alt","Typography","variant","gutterBottom"],"mappings":"6FACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,6BACA,WACE,OAAO,EAAQ,Y,qPCEvB,IAAMC,EAKE,WALFA,EAME,O,6DAKKC,EAAiB,SAAC,GAAqB,IAI9CC,EAAUC,EAJiBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC/BC,EAAiB,SAATF,EAAkBJ,EAAeA,EACzCO,EAAKC,OAAOH,GAGlB,OAAQD,GACN,IAAK,OACHF,EAAkB,MAAPK,EACXJ,EAAO,GAAH,OAAMM,IAAN,6BAA0CF,EAAK,GACnD,MACF,IAAK,OACHL,EAAkB,IAAPK,EACXJ,EAAO,GAAH,OAAMM,IAAN,6BAA0CF,EAAK,GACnD,MACF,QACE,MAAM,IAAIG,MAWd,OACE,YAACC,EAAA,EAAD,CACEC,IAAG,EAMHV,SAAUA,EACVW,UAAWC,IACXX,KAAMD,OAAWa,EAAYZ,EAT/B,SAWGG,KC9CP,I,2FAEMU,EAAY,SAAC,GAAe,IAAbX,EAAa,EAAbA,OACnB,OACE,YAACY,EAAA,EAAD,CACEC,GAAI,EACJN,IAAG,EAFL,UAQE,YAAC,EAAD,CAAgBR,KAAM,OAAQC,OAAQA,IACtC,YAAC,EAAD,CAAgBD,KAAM,OAAQC,OAAQA,Q,4CAK7B,SAASc,EAAeC,GACrC,IAAMC,EAASC,sBAD6B,EAEFD,EAAOE,MAAzClB,EAFoC,EAEpCA,OAAWmB,EAFyB,EAE5BC,EAAeC,EAFa,EAEhBC,EAFgB,EAQXC,IAAUC,QACzC,gBAAGtB,EAAH,EAAGA,GAAH,OAAYuB,OAAOvB,KAAQF,KAC3B,GAFM0B,EARoC,EAQpCA,MAAOC,EAR6B,EAQ7BA,QAASC,EARoB,EAQpBA,KAIxBC,qBAAU,WACR,GAAIV,EAAS,CAEGW,YAAW,WACvB,IAAMC,EACe,IAAnB5B,OAAOkB,GACHW,MApCI,KAqCDC,KAAK,MACLC,KAAI,SAACC,EAAGC,GAAJ,OAAYX,OAAOW,EAAM,MAC7BZ,QAAO,SAACtB,GAAD,OAAQA,IAAOF,KACvBqC,KAAKC,MAAM,GAAAD,KAAKhB,WAEjBlB,OAAOH,GA1CJ,IA0C2B,EAErCgB,EAAOtB,KAAP,UACKU,IADL,6BACyC2B,EADzC,cACqDZ,EADrD,qBAEIE,QAFJ,IAEIA,IAAU,OAGH,IAAVF,GACH,OAAO,gBAIR,IAEH,IAAMoB,EAAM,GAAH,OAAMnC,IAAN,8BAA2CwB,GAEpD,OACE,YAACY,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,YAAC,EAAD,CAAWzC,OAAQA,IACnB,YAACY,EAAA,EAAD,WACE,mBACE2B,IAAKA,EACLG,IAAKd,EACLrB,IAAG,IAIL,YAACoC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,mBACM7C,EADN,aACiB0B,KAEjB,YAACiB,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6BjB,OAE/B,YAAC,EAAD,CAAW3B,OAAQA,U","file":"static/chunks/pages/kohmasutra/posts/[postId]-f1e33a41b5388f225c51.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/kohmasutra/posts/[postId]\",\n      function () {\n        return require(\"private-next-pages/kohmasutra/posts/[postId].jsx\");\n      }\n    ]);\n  ","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Link } from '@material-ui/core';\nimport { css } from '@emotion/react';\nimport { subdirectoryUrl } from '@utils/config';\n\nconst strings = {\n  // PREV: '이전글',\n  // NEXT: '다음글',\n  // PREV_POST: '이전 포스트',\n  // NEXT_POST: '다음 포스트',\n  PREV: 'Previous',\n  NEXT: 'Next',\n  PREV_POST: 'Previous post',\n  NEXT_POST: 'Next post',\n};\n\nexport const PrevNextButton = ({ type, postId }) => {\n  const label = type === 'next' ? strings.NEXT : strings.PREV;\n  const id = Number(postId);\n\n  let disabled, href;\n  switch (type) {\n    case 'next':\n      disabled = id === 100;\n      href = `${subdirectoryUrl}/kohmasutra/posts/${id + 1}`;\n      break;\n    case 'prev':\n      disabled = id === 1;\n      href = `${subdirectoryUrl}/kohmasutra/posts/${id - 1}`;\n      break;\n    default:\n      throw new Error();\n  }\n\n  const makeOnClick = (type, id) => () => {\n    if (id < 100) {\n      router.push(`${subdirectoryUrl}/kohmasutra/cards/${id + 1}`);\n    } else if (id > 1) {\n      router.push(`${subdirectoryUrl}/kohmasutra/cards/${id - 1}`);\n    }\n  };\n\n  return (\n    <Button\n      css={css`\n        font-size: 1rem;\n        font-weight: bolder;\n        /* margin: ${theme.spacing(1) + 'px'}; */\n      `}\n      // onClick={makeOnClick(type, id)}\n      disabled={disabled}\n      component={Link}\n      href={disabled ? undefined : href}\n    >\n      {label}\n    </Button>\n  );\n};\n\nPrevNextButton.propTypes = {\n  type: PropTypes.oneOf(['next', 'prev']).isRequired,\n  postId: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouter } from 'next/router';\nimport { Box, Button, Container, Typography } from '@material-ui/core';\nimport { kohmaList } from '@utils/kohmasutra/kohmasutra';\nimport { PrevNextButton } from '@components/kohmasutra/PrevNextButton';\nimport { css } from '@emotion/react';\nimport { subdirectoryUrl } from '@utils/config';\n\nconst totalPost = 100;\n\nconst ButtonDiv = ({ postId }) => {\n  return (\n    <Box\n      mt={2}\n      css={css`\n        display: flex;\n        flex-flow: row nowrap;\n        justify-content: space-between;\n      `}\n    >\n      <PrevNextButton type={'prev'} postId={postId} />\n      <PrevNextButton type={'next'} postId={postId} />\n    </Box>\n  );\n};\n\nexport default function KohmasutraPost(props) {\n  const router = useRouter();\n  const { postId, t: timeoff, r: random } = router.query;\n\n  console.info('props', props);\n  console.info('router', router);\n  console.info('router.query', router.query);\n\n  const { title, content, file } = kohmaList.filter(\n    ({ id }) => String(id) === postId\n  )[0];\n\n  useEffect(() => {\n    if (timeoff) {\n      // alert(timeoff);\n      const timer = setTimeout(() => {\n        const nextId =\n          Number(random) === 1\n            ? Array(totalPost)\n                .fill(null)\n                .map((_, idx) => String(idx + 1))\n                .filter((id) => id !== postId)[\n                Math.floor(Math.random() * (totalPost - 1))\n              ]\n            : (Number(postId) % totalPost) + 1;\n\n        router.push(\n          `${subdirectoryUrl}/kohmasutra/posts/${nextId}?t=${timeoff}&r=${\n            random ?? ''\n          }`\n        );\n      }, timeoff * 1000);\n      return () => {\n        // clearTimeout(timer);\n      };\n    }\n  }, []);\n\n  const src = `${subdirectoryUrl}/images/kohmasutra/${file}`;\n\n  return (\n    <Container maxWidth='sm'>\n      <ButtonDiv postId={postId} />\n      <Box>\n        <img\n          src={src}\n          alt={file}\n          css={css`\n            width: 100%;\n          `}\n        />\n        <Typography variant='h4' gutterBottom>\n          {`${postId}. ${title}`}\n        </Typography>\n        <Typography variant='body1'>{content}</Typography>\n      </Box>\n      <ButtonDiv postId={postId} />\n    </Container>\n  );\n}\n\nexport const getStaticPaths = async () => {\n  const paths = kohmaList.map(({ id }) => ({\n    params: { postId: String(id) },\n  }));\n\n  return { paths, fallback: false };\n};\n\nexport const getStaticProps = async ({ params }) => {\n  console.info(params);\n  return { props: { _name: 1234 } };\n};\n"],"sourceRoot":""}